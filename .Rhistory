library(readxl)
?read_excel
install.packages("here")
library(here)
demand <- read_xlsx(here("data", "ssc2020_hourly_weather.xlsx"), 2)
demand
demand <- read_xlsx(here("data", "ssc2020_hourly_demand.xlsx"), 2)
weather <- read_xlsx(here("data", "ssc2020_hourly_weather.xlsx"), 2)
demand
View(demand)
View(weather)
library(tidyverse)
demand %>% group_by(Hour) %>%
count()
demand %>%
group_by(Year) %>%
count()
demand %>%
group_by(Month) %>%
count()
demand %>% rename(`Total Energy Use from Electricity (MW)` = Energy)
demand %>% rename(Energy = `Total Energy Use from Electricity (MW)`)
demand
demand <- demand %>%
rename(Energy = `Total Energy Use from Electricity (MW)`)
summary(demand$Energy)
hist(demand$Energy)
weather
weather$time
lubridate::date(weather$time)
lubridate::date(weather$hour)
lubridate::hour(weather$time)
weather %>%
mutate(Date = date(time),
Hour = hour(time) + 1)
weather %>%
mutate(Date = date(weather$time),
Hour = hour(time) + 1)
weather %>%
mutate(`Date` = date(weather$time),
Hour = hour(time) + 1)
weather %>%
mutate(Date = lubridate::date(time),
Hour = lubridate::hour(time) + 1)
?mutate
weather %>%
mutate(Date = lubridate::date(time),
Hour = lubridate::hour(time) + 1,
.after = time)
demand %>% mutate(Date = lubridate::as_date(Date))
demand <- demand %>% mutate(Date = lubridate::as_date(Date))
?inner_join
weather %>%
inner_join(demand, by = c("Date", "Hour"))
weather <- weather %>%
mutate(Date = lubridate::date(time),
Hour = lubridate::hour(time) + 1,
.after = time)
weather
weather %>%
inner_join(demand, by = c("Date", "Hour"))
demand %>%
inner_join(weather, by = c("Date", "Hour"))
joined <- demand %>%
inner_join(weather, by = c("Date", "Hour"))
joined
joined %>% mutate(time = NULL)
joined %>% mutate(time = NULL) %>%
relocate(Month, .after = Hour) %>%
relocate(Year, .after = Month)
joined <- joined %>% mutate(time = NULL) %>%
relocate(Month, .after = Hour) %>%
relocate(Year, .after = Month)
joined
summary(joined)
?read_csv
save_csv
?save_csv
??save_csv
?write_csv
write_csv(joined, here("data_cleaned", "joined.csv"))
library(readr)
library(here)
library(tidyverse)
joined <- read_csv(here("data_cleaned", "joined.csv"))
View(joined)
?lm
model_linear <- lm(Energy ~ ., select(joined, -Date, -Hour, -Month, -Year))
summary(model_linear)
lm(Energy ~ ., select(joined, -Date, -Hour, -Month, -Year)) %>%
summary()
lm(Energy ~ ., select(joined, -Month, -Year)) %>%
summary()
lm(Energy ~ ., select(joined, -Year)) %>%
summary()
all_sectors_total <- c(
460.1,
461.7,
468,
472.1,
469.3,
488.4,
454.5,
483.5,
496.3,
489.2,
498.8,
495,
496.8,
484.9
)
names(all_sectors_total) <- c(
2003,
2004,
2005,
2006,
2007,
2008,
2009,
2010,
2011,
2012,
2013,
2014,
2015,
2016
)
all_sectors_total
all_sectors_total["2003"]
all_sectors_total[2003]
saveRDS(all_sectors_total, file = here("data", "all_sectors_total.rds"))
rm(all_sectors_total)
all_sectors_total <- readRDS(here("data", "all_sectors_total.rds"))
model2 <- lm(Energy ~ ., select(joined, -Year))
predict(model2, joined)
joined_predicted <- joined %>%
mutate(predicted = predict(model2, joined),
.before = Energy)
View(joined_predicted)
joined_predicted %>% group_by(Year) %>%
sum()
joined_predicted %>% group_by(Year) %>%
sum(predicted)
joined_predicted %>% group_by(Year)
joined_predicted %>% group_by(Year) %>%
count()
joined_predicted %>% group_by(Year) %>%
summarise(Total_Predicted = sum(predicted))
joined_predicted %>% group_by(Year) %>%
summarise(Total_Predicted = sum(predicted),
Total_Energy = sum(Energy))
joined_predicted %>% group_by(Year) %>%
summarise(Total_Predicted = sum(predicted),
Total_Energy = sum(Energy),
Abs_Diff = abs(Total_Predicted - Total_Energy))
joined_predicted %>% group_by(Year) %>%
summarise(Total_Predicted = sum(predicted),
Total_Energy = sum(Energy),
Abs_Diff = abs(Total_Predicted - Total_Energy)) %>%
mean(.$Abs_Diff)
joined_predicted %>% group_by(Year) %>%
summarise(Total_Predicted = sum(predicted),
Total_Energy = sum(Energy),
Abs_Diff = abs(Total_Predicted - Total_Energy)) %>%
ungroup() %>%
mean(.$Abs_Diff)
joined_predicted %>% group_by(Year) %>%
summarise(Total_Predicted = sum(predicted),
Total_Energy = sum(Energy),
Abs_Diff = abs(Total_Predicted - Total_Energy)) %>%
ungroup()
joined_predicted %>% group_by(Year) %>%
summarise(Total_Predicted = sum(predicted),
Total_Energy = sum(Energy),
Abs_Diff = abs(Total_Predicted - Total_Energy))
#' Calculate the Mean Absolute Error
#'
#' @param dat This is a tibble that contains the variables Year, predicted, and Energy.
#'
#' @return
#'
calculate_MAE <- function(dat) {
temp_dat <- dat %>% group_by(Year) %>%
summarise(Total_Predicted = sum(predicted),
Total_Energy = sum(Energy),
Abs_Diff = abs(Total_Predicted - Total_Energy))
return(mean(temp_dat$Abs_Diff))
}
calculate_MAE(joined_predicted)
source('C:/Users/Scott/Dropbox/GitHub/SSC-2020-CaseStudy1/scripts/functions.R', echo=TRUE)
#' Calculate the Mean Absolute Error
#'
#' @param dat This is a tibble that contains the variables Year, predicted, and Energy.
#'
#' @return
#'
calculate_MAE <- function(dat) {
temp_dat <- dat %>% group_by(Year) %>%
summarise(Total_Predicted = sum(predicted),
Total_Energy = sum(Energy)) %>%
ungroup() %>%
mutate(Abs_Diff = abs(Total_Predicted - Total_Energy))
return(mean(temp_dat$Abs_Diff))
}
calculate_MAE(joined_predicted)
source('C:/Users/Scott/Dropbox/GitHub/SSC-2020-CaseStudy1/scripts/functions.R', echo=TRUE)
